name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  tests-coverage-reporter:
    env:
      CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Pre-run
      run: |
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        chmod +x ./cc-test-reporter
        ./cc-test-reporter before-build
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.17

    - name: Calculate test coverage
      run: go test -coverprofile=c.out ./...

    - name: Post run
      run: ./cc-test-reporter after-build format-coverage -t gocov --prefix github.com/dartkron/leetcodeBot/v3 .cover/c.out --exit-code $?


  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.17

    - name: Test
      run: go test -v ./...

  lint:
    name: "Run static checks"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - uses: WillAbides/setup-go-faster@v1.14.0
      with:
        go-version: "1.19.x"
    - run: "go test ./..."
    - run: "go vet ./..."
    - uses: dominikh/staticcheck-action@v1.3.0
      with:
        version: "2023.1.7"
        install-go: false

  deploy:
    needs: [lint, tests]
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r deploy/requirements.txt
        export DEBIAN_FRONTEND=noninteractive
        sudo apt-get -yq install zip
    - name: Deploy version to serverless
      env:
          service_account_key_id: ${{ secrets.SERVICE_ACCOUNT_KEY_ID }}
          SERVICE_ACCOUNT_ID: ${{ secrets.SERVICE_ACCOUNT_ID }}
          SERVICE_ACCOUNT_PRIVATE_KEY: ${{ secrets.SERVICE_ACCOUNT_PRIVATE_KEY }}
          TARGET_FUNCTION_ID: ${{ secrets.TARGET_FUNCTION_ID }}
          REMINDER_FUNCTION_ID: ${{ secrets.REMINDER_FUNCTION_ID }}
      run: |
        zip -r ./bot.zip ./bot.go ./go.mod ./go.sum ./pkg/ ./internal/ -x "*_test.go"
        zip -j ./bot.zip ./cmd/bot/bot.go
        zip -r ./reminder.zip ./bot.go ./go.mod ./go.sum ./pkg/ ./internal/ -x "*_test.go"
        zip -j ./reminder.zip ./cmd/reminder/reminder.go
        python ./deploy/deploy.py
